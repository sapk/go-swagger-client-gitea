// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateOrgOption CreateOrgOption options for creating an organization
// swagger:model CreateOrgOption
type CreateOrgOption struct {

	// description
	Description string `json:"description,omitempty"`

	// full name
	FullName string `json:"full_name,omitempty"`

	// location
	Location string `json:"location,omitempty"`

	// user name
	// Required: true
	UserName *string `json:"username"`

	// website
	Website string `json:"website,omitempty"`
}

// Validate validates this create org option
func (m *CreateOrgOption) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateUserName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateOrgOption) validateUserName(formats strfmt.Registry) error {

	if err := validate.Required("username", "body", m.UserName); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CreateOrgOption) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateOrgOption) UnmarshalBinary(b []byte) error {
	var res CreateOrgOption
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
