// Code generated by go-swagger; DO NOT EDIT.

package repository

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// RepoPullRequestIsMergedReader is a Reader for the RepoPullRequestIsMerged structure.
type RepoPullRequestIsMergedReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RepoPullRequestIsMergedReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewRepoPullRequestIsMergedNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewRepoPullRequestIsMergedNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewRepoPullRequestIsMergedNoContent creates a RepoPullRequestIsMergedNoContent with default headers values
func NewRepoPullRequestIsMergedNoContent() *RepoPullRequestIsMergedNoContent {
	return &RepoPullRequestIsMergedNoContent{}
}

/*RepoPullRequestIsMergedNoContent handles this case with default header values.

pull request has been merged
*/
type RepoPullRequestIsMergedNoContent struct {
	Payload RepoPullRequestIsMergedNoContentBody
}

func (o *RepoPullRequestIsMergedNoContent) Error() string {
	return fmt.Sprintf("[GET /repos/{owner}/{repo}/pulls/{index}/merge][%d] repoPullRequestIsMergedNoContent  %+v", 204, o.Payload)
}

func (o *RepoPullRequestIsMergedNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRepoPullRequestIsMergedNotFound creates a RepoPullRequestIsMergedNotFound with default headers values
func NewRepoPullRequestIsMergedNotFound() *RepoPullRequestIsMergedNotFound {
	return &RepoPullRequestIsMergedNotFound{}
}

/*RepoPullRequestIsMergedNotFound handles this case with default header values.

pull request has not been merged
*/
type RepoPullRequestIsMergedNotFound struct {
	Payload RepoPullRequestIsMergedNotFoundBody
}

func (o *RepoPullRequestIsMergedNotFound) Error() string {
	return fmt.Sprintf("[GET /repos/{owner}/{repo}/pulls/{index}/merge][%d] repoPullRequestIsMergedNotFound  %+v", 404, o.Payload)
}

func (o *RepoPullRequestIsMergedNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*RepoPullRequestIsMergedNoContentBody APIEmpty is an empty response
swagger:model RepoPullRequestIsMergedNoContentBody
*/
type RepoPullRequestIsMergedNoContentBody interface{}

/*RepoPullRequestIsMergedNotFoundBody APIEmpty is an empty response
swagger:model RepoPullRequestIsMergedNotFoundBody
*/
type RepoPullRequestIsMergedNotFoundBody interface{}
