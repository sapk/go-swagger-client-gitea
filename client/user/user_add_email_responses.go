// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/sapk/go-swagger-client-gitea/models"
)

// UserAddEmailReader is a Reader for the UserAddEmail structure.
type UserAddEmailReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UserAddEmailReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewUserAddEmailCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUserAddEmailCreated creates a UserAddEmailCreated with default headers values
func NewUserAddEmailCreated() *UserAddEmailCreated {
	return &UserAddEmailCreated{}
}

/*UserAddEmailCreated handles this case with default header values.

EmailList
*/
type UserAddEmailCreated struct {
	Payload []*models.UserAddEmailCreatedBodyItems0
}

func (o *UserAddEmailCreated) Error() string {
	return fmt.Sprintf("[POST /user/emails][%d] userAddEmailCreated  %+v", 201, o.Payload)
}

func (o *UserAddEmailCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*UserAddEmailBody CreateEmailOption options when creating email addresses
swagger:model UserAddEmailBody
*/
type UserAddEmailBody struct {

	// email addresses to add
	Emails []string `json:"emails"`
}

// MarshalBinary interface implementation
func (o *UserAddEmailBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UserAddEmailBody) UnmarshalBinary(b []byte) error {
	var res UserAddEmailBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*UserAddEmailCreatedBodyItems0 Email an email address belonging to a user
swagger:model UserAddEmailCreatedBodyItems0
*/
type UserAddEmailCreatedBodyItems0 struct {

	// email
	// Format: email
	Email strfmt.Email `json:"email,omitempty"`

	// primary
	Primary bool `json:"primary,omitempty"`

	// verified
	Verified bool `json:"verified,omitempty"`
}

// Validate validates this user add email created body items0
func (o *UserAddEmailCreatedBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateEmail(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *UserAddEmailCreatedBodyItems0) validateEmail(formats strfmt.Registry) error {

	if swag.IsZero(o.Email) { // not required
		return nil
	}

	if err := validate.FormatOf("email", "body", "email", o.Email.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *UserAddEmailCreatedBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UserAddEmailCreatedBodyItems0) UnmarshalBinary(b []byte) error {
	var res UserAddEmailCreatedBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
