// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// UserDeleteEmailReader is a Reader for the UserDeleteEmail structure.
type UserDeleteEmailReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UserDeleteEmailReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewUserDeleteEmailNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUserDeleteEmailNoContent creates a UserDeleteEmailNoContent with default headers values
func NewUserDeleteEmailNoContent() *UserDeleteEmailNoContent {
	return &UserDeleteEmailNoContent{}
}

/*UserDeleteEmailNoContent handles this case with default header values.

APIEmpty is an empty response
*/
type UserDeleteEmailNoContent struct {
}

func (o *UserDeleteEmailNoContent) Error() string {
	return fmt.Sprintf("[DELETE /user/emails][%d] userDeleteEmailNoContent ", 204)
}

func (o *UserDeleteEmailNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*UserDeleteEmailBody DeleteEmailOption options when deleting email addresses
swagger:model UserDeleteEmailBody
*/
type UserDeleteEmailBody struct {

	// email addresses to delete
	Emails []string `json:"emails"`
}

// MarshalBinary interface implementation
func (o *UserDeleteEmailBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UserDeleteEmailBody) UnmarshalBinary(b []byte) error {
	var res UserDeleteEmailBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
